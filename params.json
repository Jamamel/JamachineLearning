{"name":"Jamachinelearning","tagline":"John's Hopkins Coursera Data Scientist Certification - Predictive Machine Learning","body":"# Introduction\r\n\r\nThis document is the final submission that describes construction of a machine learning algorithm to predict the manner of excercise being performed by several project participants.\r\n\r\n## Background\r\n\r\nUsing devices such as Jawbone Up, Nike FuelBand, and Fitbit it is now possible to collect a large amount of data about personal activity relatively inexpensively. These type of devices are part of the quantified self movement â€“ a group of enthusiasts who take measurements about themselves regularly to improve their health, to find patterns in their behavior, or because they are tech geeks. One thing that people regularly do is quantify how much of a particular activity they do, but they rarely quantify how well they do it. In this project, your goal will be to use data from accelerometers on the belt, forearm, arm, and dumbell of 6 participants. They were asked to perform barbell lifts correctly and incorrectly in 5 different ways. More information is available from the website [here](http://groupware.les.inf.puc-rio.br/har]) (see the section on the Weight Lifting Exercise Dataset). \r\n\r\n## Data \r\n\r\nThe training data for this project are available [here](https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv).\r\n\r\nThe test data are available [here](https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv).\r\n\r\nThe data for this project come from this [source](http://groupware.les.inf.puc-rio.br/har).\r\n\r\nThe aim of the project is to predict the manner in which they did the exercise using a machine learning algorithm to predit it (variable *classe*).\r\n\r\n\r\n# Data Loading and Pre-Processing\r\n\r\nData was doawnloaded to R working directory and loaded ([loadJML code](https://github.com/Jamamel/JamachineLearning/blob/master/R/load_0.R)).\r\n\r\n```{r}\r\nlibrary(magrittr)\r\nlibrary(data.table)\r\ndlist <- JamachineLearning::loadJML('./csvs/pml-training.csv', './csvs/pml-testing.csv')\r\n```\r\n\r\nRemove first 7 variables (id, window, timestamp) given they are considered redundant in the analysis. Transform *classe* to factor.\r\n\r\n```{r, results = 'hide'}\r\nd1 <- data.table::copy(dlist[[1]])\r\nd1[, c(1:7) := NULL, with = F]\r\nfor(i in c('classe')) data.table::set(d1, j = i, value = factor(d1[[i]]))\r\n```\r\n\r\nCreate data partition (60% training, 40% testing) of original training dataset.Remove variables with (up to nearly) no variance and any variables that have at least 97% of their values missing.\r\n\r\n```{r, results='hide', cache = TRUE}\r\n# partition dataset\r\ntrainpart <- caret::createDataPartition(d1$classe, p = 0.6, list = FALSE)[,1]\r\n\r\ntraining <- d1[trainpart, ]\r\ntesting <- d1[-trainpart, ]\r\n\r\n# check for near zero variance\r\nvarcheck <- caret::nearZeroVar(training, saveMetrics = TRUE)\r\noutvars <- rownames(varcheck)[varcheck$nzv]\r\nif(isTRUE(length(outvars) > 0)) training[, outvars := NULL, with = F]\r\n\r\n\r\n# check for proportion of missing values\r\nnacount <- as.matrix(training[, lapply(.SD, function(x) sum(is.na(x)))])\r\ntable(nacount)\r\nnacutoff <- min(nacount[nacount != 0])\r\n\r\nif(isTRUE(nacutoff/nrow(training) > 0.97)) {\r\n\r\n  outvars <- which(nacount >= nacutoff)\r\n  training[, outvars := NULL, with = F]\r\n\r\n}\r\n\r\n# apply common class to all numeric variables remaining\r\nvars <- unlist(sapply(training, function(x) class(x)[1]))\r\nnumvars <- names(vars[vars %in% c('numeric', 'integer')])\r\nfor(i in numvars) data.table::set(training, j = i, value = as.numeric(training[[i]]))\r\n```\r\n\r\n\r\n# Modelling and Cross-Validation\r\n\r\nA random forest algorithm is applied to identify the best prediction model using all *randomForest* default settings.\r\n\r\n```{r, results='hide'}\r\nset.seed(1000)\r\nmoddata <- data.table::copy(training)\r\nmod <- randomForest::randomForest(classe ~ ., data = moddata)\r\n```\r\n\r\nGenerate confusino matrix to measure accuracies.\r\n\r\n```{r}\r\nconfmat <- caret::confusionMatrix(predict(mod, testing, type = 'class'), testing$classe)\r\nconfmat\r\n```\r\n```{r}\r\n## Confusion Matrix and Statistics\r\n## \r\n##           Reference\r\n## Prediction    A    B    C    D    E\r\n##          A 2231    9    0    0    0\r\n##          B    1 1501    7    0    0\r\n##          C    0    7 1358   14    3\r\n##          D    0    1    3 1270    4\r\n##          E    0    0    0    2 1435\r\n## \r\n## Overall Statistics\r\n##                                           \r\n##                Accuracy : 0.9935          \r\n##                  95% CI : (0.9915, 0.9952)\r\n##     No Information Rate : 0.2845          \r\n##     P-Value [Acc > NIR] : < 2.2e-16       \r\n##                                           \r\n##                   Kappa : 0.9918          \r\n##  Mcnemar's Test P-Value : NA              \r\n## \r\n## Statistics by Class:\r\n## \r\n##                      Class: A Class: B Class: C Class: D Class: E\r\n## Sensitivity            0.9996   0.9888   0.9927   0.9876   0.9951\r\n## Specificity            0.9984   0.9987   0.9963   0.9988   0.9997\r\n## Pos Pred Value         0.9960   0.9947   0.9826   0.9937   0.9986\r\n## Neg Pred Value         0.9998   0.9973   0.9985   0.9976   0.9989\r\n## Prevalence             0.2845   0.1935   0.1744   0.1639   0.1838\r\n## Detection Rate         0.2843   0.1913   0.1731   0.1619   0.1829\r\n## Detection Prevalence   0.2855   0.1923   0.1761   0.1629   0.1832\r\n## Balanced Accuracy      0.9990   0.9938   0.9945   0.9932   0.9974\r\n```\r\n\r\nThe confusion matrix confirms a highly accurate model (*Accuracy* = 99.3%) with acceptably low out-of-bag error (*OOB* = 0.65%).\r\n\r\n\r\n# Validation and Submission\r\n\r\nThe model was then validated against the project's training set.\r\n\r\n```{r, results='hide'}\r\nvalidating <- data.table::copy(dlist[[2]])\r\nvalidating[, 'V1' := as.numeric(V1)]\r\ndata.table::setkey(validating, V1)\r\nfor(i in numvars) data.table::set(validating, j = i, value = as.numeric(validating[[i]]))\r\n```\r\n\r\nThe predicted values were then submitted for the project's submission.\r\n\r\n```{r}\r\npml_write_files = function(x){\r\n  n = length(x)\r\n  for(i in 1:n){\r\n    filename = paste0(\"problem_id_\",i,\".txt\")\r\n    write.table(x[i],file=filename,quote=FALSE,row.names=FALSE,col.names=FALSE)\r\n  }\r\n}\r\n\r\npml_write_files(predict(mod, newdata = validating[,colnames(moddata)[-53], with = F], type = 'class'))\r\n\r\n```\r\n\r\n\r\n# Appendix\r\n\r\nThis is t he R setup required to run all code displayed.\r\n\r\n```{r}\r\nsessionInfo()\r\n```\r\n```{r}\r\n## R version 3.2.1 (2015-06-18)\r\n## Platform: x86_64-w64-mingw32/x64 (64-bit)\r\n## Running under: Windows 7 x64 (build 7601) Service Pack 1\r\n## \r\n## locale:\r\n## [1] LC_COLLATE=English_United Kingdom.1252 \r\n## [2] LC_CTYPE=English_United Kingdom.1252   \r\n## [3] LC_MONETARY=English_United Kingdom.1252\r\n## [4] LC_NUMERIC=C                           \r\n## [5] LC_TIME=English_United Kingdom.1252    \r\n## \r\n## attached base packages:\r\n## [1] stats     graphics  grDevices utils     datasets  methods   base     \r\n## \r\n## other attached packages:\r\n## [1] data.table_1.9.4 magrittr_1.5    \r\n## \r\n## loaded via a namespace (and not attached):\r\n##  [1] Rcpp_0.11.6           formatR_1.2           nloptr_1.0.4         \r\n##  [4] plyr_1.8.3            class_7.3-13          iterators_1.0.7      \r\n##  [7] tools_3.2.1           digest_0.6.8          lme4_1.1-8           \r\n## [10] lubridate_1.3.3       evaluate_0.7          memoise_0.2.1        \r\n## [13] gtable_0.1.2          nlme_3.1-121          lattice_0.20-31      \r\n## [16] mgcv_1.8-6            Matrix_1.2-2          foreach_1.4.2        \r\n## [19] parallel_3.2.1        yaml_2.1.13           SparseM_1.6          \r\n## [22] brglm_0.5-9           proto_0.3-10          e1071_1.6-6          \r\n## [25] BradleyTerry2_1.0-6   stringr_1.0.0         knitr_1.10.5         \r\n## [28] gtools_3.5.0          stats4_3.2.1          nnet_7.3-9           \r\n## [31] grid_3.2.1            caret_6.0-52          rmarkdown_0.7        \r\n## [34] minqa_1.2.4           car_2.0-25            ggplot2_1.0.1        \r\n## [37] reshape2_1.4.1        scales_0.2.5          codetools_0.2-14     \r\n## [40] htmltools_0.2.6       MASS_7.3-40           splines_3.2.1        \r\n## [43] pbkrtest_0.4-2        randomForest_4.6-10   colorspace_1.2-6     \r\n## [46] quantreg_5.11         JamachineLearning_0.1 stringi_0.5-5        \r\n## [49] munsell_0.4.2         chron_2.3-47\r\n```","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}